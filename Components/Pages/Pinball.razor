@page "/pinball"

@using Microsoft.AspNetCore.Components.QuickGrid
@using System.Linq

@inject HttpClient Http
@inject IJSRuntime JS

@rendermode InteractiveServer

<PageTitle>Pinball Locator</PageTitle>

<h1>Pinball Locator</h1>

<table>
    <tr>
        <td>
            <h5>Latitude:  </h5>
        </td>
        <td>
            <input @bind="@location.Latitude"  />
        </td>
    </tr>
    <tr>
        <td>
            <h5>Longitude: </h5>
        </td>
        <td>
            <input @bind="location.Longitude"  />
        </td>
    </tr>
</table>

<br />

<button class="btn btn-primary" @onclick="Submit">Search</button>
<button class="btn btn-primary" @onclick="GetUserCoordinates">Near Me</button>

<br />
<br />

<div>
    @if (pinballLocations is null)
    {
        <div><p>Waiting for submission...</p></div>
    }
    else if (!pinballLocations.Any())
    {
        <div @key="pinballLocations"><p>No locations found</p></div>
    }
    else if (pinballLocations.Any())
    {
        <div class="grid">
            <QuickGrid Items="@pinballLocations.AsQueryable()">
                <PropertyColumn Property="@(p => p.id)" Sortable="true" />
                <PropertyColumn Property="@(p => p.name)" Sortable="true" />
                <PropertyColumn Property="@(p => p.street)" Sortable="true" />
                <PropertyColumn Property="@(p => p.city)" Sortable="true" />
                <PropertyColumn Property="@(p => p.state)" Sortable="true" />
                <PropertyColumn Property="@(p => p.zip)" Sortable="true" />
            </QuickGrid>
        </div>
    }
</div>